{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"iNAoCeA,EAjCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAkBrC,OACI,sBAAMC,SAXY,SAACC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBS,SAACP,GAClBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGEA,EAASC,OAHX,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAQD,EAAIC,GACZC,MAAQF,EAAIE,MACZV,IAAG,UAAKQ,EAAIG,cAAT,aAAK,EAAYC,iBAAiBZ,QAG7Ca,QAAQC,IAAIR,GAZO,kBAaZA,GAbY,4CAAH,sDCgBLS,EAbK,SAAC,GAAmB,EAAlBN,GAAmB,IAAhBT,EAAe,EAAfA,IAAIU,EAAW,EAAXA,MACzB,OACI,sBAAKM,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCyBDS,EA5BC,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDJ,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAY,GACZe,SAAY,IAHsB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAXAC,qBAAU,WACN1B,EAAQC,GACP0B,MAAM,SAAAC,GACHH,EAAS,CACLjB,KAAYoB,EACZL,SAAY,SAGtB,CAACtB,IAGIuB,EDduBK,CAAa5B,GAA/Ba,EAFgB,EAErBN,KAAYe,EAFS,EAETA,QAKnB,OAFAP,QAAQC,IAAIM,GAGR,qCACI,oBAAIJ,UAAU,yCAAd,SAAwDlB,IACtDsB,GAAW,mBAAGJ,UAAU,wCAAb,sBACb,qBAAKA,UAAU,YAAf,SAEQL,EAAOJ,KAAK,SAACC,GACT,OAAO,cAAC,EAAD,eAEHA,GADCA,EAAIC,aEqBlBkB,EAnCM,WAAM,MAEa3C,mBAAS,CAAC,mBAFvB,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KAQvB,OACI,qCACI,iDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GACX,OAAO,cAAC,EAAD,CAEHA,SAAUA,GADLA,YChBjC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.970be81f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst CategoryAdd = ({setCategories}) => {\r\n    //variables\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    //funciones\r\n    const handlerValue = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handlerSubmit = (e) => {\r\n        e.preventDefault()\r\n        // console.log('enviado');\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    //retorno\r\n    return (\r\n        <form onSubmit={handlerSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handlerValue}\r\n             />\r\n        </form>\r\n    );\r\n}\r\n\r\nCategoryAdd.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default CategoryAdd;\r\n","export const getGifs = async (category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=8X89psjOUhQceUfv06JgrX76T4hvTxfJ`;\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id:     img.id,\r\n            title:  img.title,\r\n            url:    img.images?.downsized_medium.url,\r\n        }\r\n    });\r\n    console.log(gifs);\r\n    return gifs;\r\n    // setImages(gifs);\r\n}","import React from 'react'\r\n// import PropTypes from 'prop-types'\r\n\r\nconst GifGridItem = ({id,url,title}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n// GifGridItem.propTypes = {\r\n\r\n// }\r\n\r\nexport default GifGridItem;\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n    //variables\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    //funciones\r\n    console.log(loading);\r\n    //retorno\r\n    return (\r\n        <>\r\n            <h3 className=\"card animate__animated animate__fadeIn\">{category}</h3>\r\n            { loading && <p className=\"card animate__animated animate__flash\">Cargando</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( (img) => {\r\n                        return <GifGridItem\r\n                        key={img.id}\r\n                        {...img} />\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n// GifGrid.propTypes = {\r\n\r\n// }\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data:       [],\r\n        loading:    true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then( imgs => {\r\n            setState({\r\n                data:       imgs,\r\n                loading:    false\r\n            });\r\n        });\r\n    },[category]);\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\n// import PropTypes from 'prop-types'\r\nimport CategoryAdd from './CategoryAdd';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    //variables\r\n    const [categories, setCategories] = useState(['DragÃ³n Ball']);\r\n    // const handlerAdd = () => {\r\n    //     setCategories(cats => [...cats,'Naruto']);\r\n    // }\r\n\r\n    //retorno\r\n    return (\r\n        <>\r\n            <h2>Gift Expert App</h2>\r\n            <CategoryAdd setCategories={setCategories} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map(category => {\r\n                        return <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\n// GifExpertApp.propTypes = {\r\n\r\n// }\r\n\r\n// GifExpertApp.defaultProp = {\r\n\r\n// }\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//componentes\nimport GifExpertApp from './components/GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}